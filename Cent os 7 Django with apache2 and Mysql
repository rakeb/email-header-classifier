Cent os 7 Django with apache2 and Mysql
--------------------------------------
Install


Ubuntu 18 Django with apache2 and Mysql
--------------------------------------
Install Python3 pip3 apache2 and libapache2-mod-wsgi

sudo yum update
sudo yum install python3-pip apache2 libapache2-mod-wsgi-py3

Configure a Python Virtual Environment
-------------------------------------

sudo pip3 install virtualenv

mkdir ~/myproject
cd ~/myproject

Within the project directory, create a Python virtual environment by typing:
-------------------------------------

virtualenv myprojectenv

Activate virtualenv
-------------------

source myprojectenv/bin/activate

install the following inside virtualenv
---------------------------------------

pip install django jsonfield numpy sklearn pandas requests bs4 lxml mysql-connector-python

Deactivate virtualenv
---------------------------------------
deactivate

Run the following coomand for machine learning code
---------------------------------------

sudo su

Install the following 
---------------------------------------

pip3 install numpy pandas sklearn

Try this:
---------
python3 /home/ubuntu/myproject/headerclassifier/PANACEA_main.py


Copy folder
-----------

inside the folder: myproject
copy mysite, headerclassifier

The wsgi file should be the following:
--------------------------------------

"""
WSGI config for mysite project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/howto/deployment/wsgi/
"""

import os

import sys

from django.core.wsgi import get_wsgi_application

path = '/home/ubuntu/myproject/mysite'
#path = '/code/mysite'
if path not in sys.path:
    sys.path.append(path)

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "mysite.settings")

application = get_wsgi_application()


Use the following into: vim /etc/apache2/sites-available/000-default.conf 
---------------------------
<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        Alias /static /home/ubuntu/myproject/mysite/static
        <Directory /home/ubuntu/myproject/mysite/static>
                Require all granted
        </Directory>

        <Directory /home/ubuntu/myproject/mysite/mysite>
                <Files wsgi.py>
                        Require all granted
                </Files>
        </Directory>
        WSGIDaemonProcess myproject python-home=/home/ubuntu/myproject/myprojectenv python-path=/home/ububtu/myproject
        WSGIProcessGroup myproject
        WSGIScriptAlias / /home/ubuntu/myproject/mysite/mysite/wsgi.py
</VirtualHost>


At the end of the file paste this:
-----------------------------------------------------------------
                SSLCertificateFile      /etc/letsencrypt/live/panaceauncc.com/fullchain.pem
                SSLCertificateKeyFile /etc/letsencrypt/live/panaceauncc.com/privkey.pem

 # BrowserMatch "MSIE [2-6]" \
                #               nokeepalive ssl-unclean-shutdown \
                #               downgrade-1.0 force-response-1.0

                Alias /static /home/ubuntu/myproject/mysite/static
                <Directory /home/ubuntu/myproject/mysite/static>
                        Require all granted
                </Directory>

                <Directory /home/ubuntu/myproject/mysite/mysite>
                        <Files wsgi.py>
                                Require all granted
                        </Files>
                </Directory>
                #WSGIDaemonProcess myproject python-home=/home/ubuntu/myproject/myprojectenv python-path=/home/ububtu/myproject
                WSGIProcessGroup myproject
                WSGIScriptAlias / /home/ubuntu/myproject/mysite/mysite/wsgi.py

        </VirtualHost>


Letsencrypt
-------------
sudo certbot certonly --standalone -d panaceauncc.com


Enable https:
---------------------------
sudo a2enmod ssl
sudo a2ensite default-ssl
sudo service apache2 restart
